# -*- coding: utf-8 -*-

# ‚úß‚Å†*‚ÇäÀö ü¶¢„Éª‚Çä‚úß RESUMEN DE M√âTODOS Y FUNCIONES ‚úß‚Å†*‚ÇäÀö ü¶¢„Éª‚Çä‚úß


# ‚úß‚Å†*„Äú‚Å†*„Äú‚Å†*„Äú‚Å†* List / Array Methods „Äú‚Å†*„Äú‚Å†*„Äú‚Å†*‚úß
# https://www.w3schools.com/python/python_ref_list.asp

# ‡º∫ append() Adds an element at the end of the list ‚û§ arr.append()
# fruits = ["apple", "banana", "cherry"]
# fruits.append("orange") # ‚û§ ['apple', 'banana', 'cherry', 'orange']

# ‡º∫ count() Returns the number of elements with the specified value ‚û§ arr.count()
# fruits = ["apple", "banana", "cherry", "cherry", "cherry"]
# x = fruits.count("cherry") # ‚û§ 3

# ‡º∫ index() Returns the index of the first element with the specified value ‚û§ arr.index()
# fruits = ['apple', 'banana', 'cherry']
# x = fruits.index("cherry") # ‚û§ 2 

# ‡º∫ insert() Adds an element at the specified position ‚û§ arr.insert()
# fruits = ['apple', 'banana', 'cherry']
# fruits.insert(1, "orange") # ‚û§ ['apple', 'orange', 'banana', 'cherry']

# ‡º∫ list() Returns a list ‚û§ 
# fruits = list(('apple', 'banana', 'cherry')) # ‚û§ ['apple', 'banana', 'cherry']

# ‡º∫ pop() Removes the element at the specified position ‚û§ arr.pop()
# fruits = ['apple', 'banana', 'cherry']
# fruits.pop(1) # ‚û§ ['apple', 'cherry']

# ‡º∫ remove() Removes the first item with the specified value ‚û§ arr.remove()
# fruits = ['apple', 'banana', 'cherry']
# fruits.remove("banana") # ‚û§ ['apple', 'cherry']

# ‡º∫ reverse() Reverses the order of the list ‚û§ arr.reverse()
# fruits = ['apple', 'banana', 'cherry']
# fruits.reverse() # ‚û§ ['cherry', 'banana', 'apple']

# ‡º∫ sort() Sorts the list ‚û§ arr.sort()
# cars = ['Ford', 'BMW', 'Volvo']
# cars.sort() # ‚û§ ['BMW', 'Ford', 'Volvo']

# ‚úß‚Å†*„Äú‚Å†*„Äú‚Å†*„Äú‚Å†* String Methods „Äú‚Å†*„Äú‚Å†*„Äú‚Å†*‚úß
# https://www.w3schools.com/python/python_ref_string.asp

# ‡º∫ isalnum() Returns True if all characters in the string are alphanumeric ‚û§ string.isAlNum()
# txt = "Company12"
# x = txt.isalnum() # ‚û§ True

# ‡º∫ isalpha() Returns True if all characters in the string are in the alphabet ‚û§ string.isAlpha()
# txt = "CompanyX"
# x = txt.isalpha() # ‚û§ True

# ‡º∫ isdecimal() Returns True if all characters in the string are decimals ‚û§ string.isDecimal()
# txt = "1234"
# x = txt.isdecimal() # ‚û§ True

# ‡º∫ isdigit() Returns True if all characters in the string are digits ‚û§ string.isDigit()
# txt = "50800"
# x = txt.isdigit() # ‚û§ True

# ‡º∫ isnumeric() Returns True if all characters in the string are numeric ‚û§ string.isNumeric()
# txt = "565543"
# x = txt.isnumeric() # ‚û§ True

# ‡º∫ join() Converts the elements of an iterable into a string ‚û§ element or symbol.join(string)
# myTuple = ("John", "Peter", "Vicky")
# x = "#".join(myTuple) # ‚û§ John#Peter#Vicky

# ‡º∫ lower() Converts a string into lower case ‚û§ string.lower()
# txt = "Hello my FRIENDS"
# x = txt.lower() # ‚û§ hello my friends

# ‡º∫ split() Splits the string at the specified separator, and returns a list ‚û§ string.split()
# txt = "welcome to the jungle"
# x = txt.split() # ‚û§ ['welcome', 'to', 'the', 'jungle'] 

# ‡º∫ upper() Converts a string into upper case ‚û§ string.upper()
# txt = "Hello my friends"
# x = txt.upper() # ‚û§ HELLO MY FRIENDS


# ‚úß‚Å†*„Äú‚Å†*„Äú‚Å†*„Äú‚Å†* Exists in „Äú‚Å†*„Äú‚Å†*„Äú‚Å†*‚úß

# ‡º∫ in ‚û§ To check if a value is present in a list, tuple, etc. in LITERAL order ‚û§ str in str
# fruits = ["apple", "banana", "cherry"]
# if "banana" in fruits:
#   print("yes")

# a = 'abc'
# b = 'abcd'
# print(a in b) #--> true (aparece literalmente en el orden)

# ‡º∫ subset() Returns whether another set contains this set or not ‚û§ str.issubset(str2) IMPORTANT to test with an original set
# x = {"a", "b", "c"}
# y = {"f", "e", "d", "c", "b", "a"}
# z = x.issubset(y) # ‚û§ True 
# print(z)

# c = set('aeiou')
# d = 'murcielago'
# print(c.issubset(d)) #---> true (ac√° no necesitan estar en orden, solo aparecer)

# ‚úß‚Å†*„Äú‚Å†*„Äú‚Å†*„Äú‚Å†* Dictionary Methods „Äú‚Å†*„Äú‚Å†*„Äú‚Å†*‚úß
# https://www.w3schools.com/python/python_ref_dictionary.asp

# ‡º∫ get() Returns the value of the specified key ‚û§ dic.get(key)
# car = {
#   "brand": "Ford",
#   "model": "Mustang",
#   "year": 1964
# }
# x = car.get("model") # ‚û§ Mustang

# ‡º∫ items() Returns a list containing a tuple for each key value pair ‚û§ dic.items()
# car = {
#   "brand": "Ford",
#   "model": "Mustang",
#   "year": 1964
# }
# x = car.items() # ‚û§ dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 1964)]) 

# ‡º∫ keys() Returns a list containing the dictionary's keys ‚û§ dic.keys
# car = {
#   "brand": "Ford",
#   "model": "Mustang",
#   "year": 1964
# }
# x = car.keys() # ‚û§ dict_keys(['brand', 'model', 'year'])

# ‡º∫ values() Returns a list of all the values in the dictionary ‚û§ dic.values
# car = {
#   "brand": "Ford",
#   "model": "Mustang",
#   "year": 1964
# }
# x = car.values() # ‚û§ dict_values(['Ford', 'Mustang', 1964])

 

